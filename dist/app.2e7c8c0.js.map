{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Game.ts","webpack:///./src/Scene.ts","webpack:///./src/base/MapType.ts","webpack:///./src/main.ts","webpack:///./src/road/AStarRoadSeeker.ts","webpack:///./src/road/MapRoadUtils.ts","webpack:///./src/road/Point.ts","webpack:///./src/road/RoadNode.ts"],"names":[],"mappings":"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","file":"app.2e7c8c0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","import Scene from './Scene'\nimport mapData from './mapData.json';\n\nlet stageWidth = document.documentElement.clientWidth || document.body.clientWidth\nlet stageHeight = document.documentElement.clientHeight || document.body.clientHeight\n\nexport default class Game extends PIXI.Application {\n\n  constructor(config = {}) {\n    super(config)\n    this.init()\n  }\n\n  init() {\n    document.body.prepend(this.view)\n\n    let scene = new Scene();\n    this.stage.addChild(scene);\n\n    let drag = new Drag({\n      ele: scene,\n      width: mapData.mapWidth,\n      height: mapData.mapWidth\n    })\n  }\n}\n\nclass Drag {\n  config\n  ele\n  dragging\n  offset\n\n  constructor(config) {\n    let {ele} = this.config = config\n\n    this.ele = ele\n    this.ele.interactive = true\n    this.ele.on('pointerdown', this.onDragStart, this)\n  }\n\n  onDragStart(event) {\n    let {x: gx, y: gy} = event.data.global\n\n    this.dragging = true\n    this.offset = {x: this.ele.x - gx, y: this.ele.y - gy}\n\n    this.ele.on('pointerup', this.onDragEnd, this)\n    this.ele.on('pointerupoutside', this.onDragEnd, this)\n    this.ele.on('pointermove', this.onDragMove, this)\n  }\n\n  onDragEnd() {\n    this.dragging = false\n    this.offset = null\n    this.ele.off('pointerup', this.onDragEnd, this)\n      .off('pointerupoutside', this.onDragEnd, this)\n      .off('pointermove', this.onDragMove, this)\n  }\n\n  onDragMove(event) {\n    if (this.dragging) {\n      let {x: gx, y: gy} = event.data.global\n\n      let x = gx + this.offset.x\n      x = (x >= 0\n        ? 0\n        : x <= -(mapData.mapWidth * this.ele.scale.x - stageWidth)\n          ? -(mapData.mapWidth * this.ele.scale.x - stageWidth)\n          : x)\n\n      let y = gy + this.offset.y\n      y = (y >= 0\n        ? 0\n        : y <= -(mapData.mapHeight * this.ele.scale.y - stageHeight)\n          ? -(mapData.mapHeight * this.ele.scale.y - stageHeight)\n          : y)\n\n      this.ele.x = x\n      this.ele.y = y\n    }\n  }\n}","import mapData from './mapData.json';\nimport MapRoadUtils from \"./road/MapRoadUtils\";\nimport AStarRoadSeeker from \"./road/AStarRoadSeeker\";\nimport RoadNode from \"./road/RoadNode\";\nimport Point from \"./road/Point\";\n\nexport default class Scene extends PIXI.Container {\n  private _roadDic: { [key: string]: RoadNode } = {};\n  private _roadSeeker\n\n  roadNodeArr: any;\n  player: any;\n\n  constructor() {\n    super()\n    this.init()\n  }\n\n  init() {\n    console.log(mapData)\n\n    MapRoadUtils.instance.updateMapInfo(mapData.mapWidth, mapData.mapHeight, mapData.nodeWidth, mapData.nodeHeight, mapData.type);\n\n    var len: number = mapData.roadDataArr.length;\n    var len2: number = mapData.roadDataArr[0].length;\n\n    var value: number = 0;\n\n    for (var i: number = 0; i < len; i++) {\n      for (var j: number = 0; j < len2; j++) {\n        value = mapData.roadDataArr[i][j];\n\n        var node: RoadNode = MapRoadUtils.instance.getNodeByDerect(j, i);\n        node.value = value;\n\n        this._roadDic[node.cx + \"_\" + node.cy] = node;\n\n        let rhombusView = new MapNodeView(node)\n        this.addChild(rhombusView)\n        // if (i < 20 && j < 20) {\n        //   let rhombusView = new MapNodeView(node)\n        //   this.addChild(rhombusView)\n        // }\n      }\n    }\n\n    this._roadSeeker = new AStarRoadSeeker(this._roadDic);\n\n    var startNode1: RoadNode = MapRoadUtils.instance.getNodeByWorldPoint(5, 25);\n    var targetNode1: RoadNode = MapRoadUtils.instance.getNodeByWorldPoint(6, 22);\n\n    var startNode: RoadNode = this._roadDic[startNode1.cx + \"_\" + startNode1.cy];\n    var targetNode: RoadNode = this._roadDic[targetNode1.cx + \"_\" + targetNode1.cy];\n    console.log(startNode, targetNode)\n\n    var roadNodeArr: RoadNode[] = this._roadSeeker.seekPath(startNode, targetNode); //点击到障碍点不会行走\n\n    console.log(roadNodeArr)\n\n    this.player = PIXI.Sprite.from('static/assets/bunny.png');\n    this.addChild(this.player)\n    this.player.x = startNode.px;\n    this.player.y = startNode.py;\n    this.player.anchor.set(0.5);\n\n    this.roadNodeArr = roadNodeArr\n\n    this.move()\n  }\n\n  move() {\n    if (this.roadNodeArr && this.roadNodeArr.length > 0) {\n      let node = this.roadNodeArr.shift()\n      let duration = 1;\n\n      window[\"TweenMax\"].to(this.player, duration, {\n        x: node.px,\n        y: node.py,\n        ease: window[\"Power0\"].easeNone,\n        onComplete: this.move.bind(this)\n      })\n    }\n  }\n}\n\nclass MapNodeView extends PIXI.Container {\n  node: any;\n\n  constructor(node) {\n    super()\n\n    this.node = node\n    let {cx, cy, dx, dy, px, py, value} = node;\n    this.x = px\n    this.y = py\n    let w = mapData.nodeWidth\n    let h = mapData.nodeHeight\n\n    var graphics = new PIXI.Graphics()\n    graphics.beginFill(value === 0 ? 0x00000 : 0xFF0000, 1)\n    graphics.lineStyle(1, 0xffffff, 0.3)\n    graphics.moveTo(-w / 2, 0)\n    graphics.lineTo(0, -h / 2)\n    graphics.lineTo(w / 2, 0)\n    graphics.lineTo(0, h / 2)\n    graphics.closePath()\n    graphics.endFill()\n    this.addChild(graphics)\n\n    const graphics2 = new PIXI.Graphics()\n    // graphics2.lineStyle(1, 0x000000, 1);\n    graphics2.beginFill(0xffffff, 1);\n    graphics2.drawCircle(0, 0, 1);\n    graphics2.endFill();\n    this.addChild(graphics2)\n\n    let style = {fontSize: 12, fill: 0xffffff, align: 'center'}\n\n    // let text3 = new PIXI.Text(`${px}/${py}`, style)\n    // this.addChild(text3)\n    // text3.anchor.set(0, 1)\n    // text3.x = -(w / 2) + 5\n    // text3.y = 0\n    // text3['angle'] = 31;\n\n    let text2 = new PIXI.Text(`${dx}/${dy}`, style)\n    this.addChild(text2)\n    text2.anchor.set(0.5, 0.5)\n    text2.x = 0\n    text2.y = 0\n    text2['angle'] = 31;\n\n    let text = new PIXI.Text(`${cx}/${cy}`, style)\n    text.anchor.set(1, 0);\n    this.addChild(text)\n    text.x = (w / 2) - 3\n    text.y = -3\n    text['angle'] = 31;\n  }\n}","\r\nexport enum MapType \r\n{\r\n    angle45 = 0,\r\n    angle90 = 1,\r\n    honeycomb = 2,\r\n}\r\n","import Game from \"./Game\";\n\nlet kuangAlpha = 0.01\nlet kuangLineColor = 0xcccccc\nlet stageWidth = document.documentElement.clientWidth || document.body.clientWidth\nlet stageHeight = document.documentElement.clientHeight || document.body.clientHeight\nlet mapWidth = 2880\nlet mapHeight = 1440\nlet game = new Game({\n  width: stageWidth,\n  height: stageHeight,\n  backgroundColor: 0xcccccc\n})","import RoadNode from \"./RoadNode\";\r\nimport IRoadSeeker from \"./IRoadSeeker\";\r\n\r\n/**\r\n * A*寻路算法 \r\n * @author 落日故人 QQ 583051842\r\n * \r\n */\r\nexport default class AStarRoadSeeker implements IRoadSeeker {\r\n\r\n    \r\n    /**\r\n     * 横向移动一个格子的代价\r\n     */\t\t\r\n    private COST_STRAIGHT:number = 10; \r\n    \r\n    /**\r\n     * 斜向移动一个格子的代价\r\n     */\t\t\r\n    private COST_DIAGONAL:number = 14;\r\n    \r\n    /**\r\n     *最大搜寻步骤数，超过这个值时表示找不到目标 \r\n        */\t\t\r\n    private maxStep:number = 1000;\r\n    \r\n    /**\r\n     * 开启列表\r\n     */\t\t\r\n    private _openlist:Array<RoadNode>; \r\n    \r\n    /**\r\n     *关闭列表 \r\n        */\t\t\r\n    private _closelist:Array<RoadNode>;\r\n    \r\n    /**\r\n     *开始节点 \r\n        */\t\t\r\n    private _startNode:RoadNode;\r\n    \r\n    /**\r\n     *当前检索节点 \r\n        */\t\t\r\n    private _currentNode:RoadNode;\r\n    \r\n    /**\r\n     *目标节点 \r\n        */\t\t\r\n    private _targetNode:RoadNode;\r\n    \r\n    /**\r\n     *地图路点数据 \r\n        */\t\t\r\n    private _roadNodes:{[key:number]:RoadNode};\r\n    \r\n    /**\r\n     *用于检索一个节点周围8个点的向量数组 \r\n        */\t\t\r\n    private _round:number[][] = [[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1]]\r\n    \r\n    private handle:any = -1;\r\n\r\n    /**\r\n     * 是否优化路径\r\n     */\r\n    private optimize:boolean = true;\r\n    \r\n    public constructor(roadNodes:{[key:string]:RoadNode})\r\n    {\r\n        this._roadNodes = roadNodes;\r\n    }\r\n    \r\n    \r\n    /**\r\n     *寻路入口方法 \r\n        * @param startNode\r\n        * @param targetNode\r\n        * @return \r\n        * \r\n        */\t\t\r\n    public seekPath(startNode:RoadNode,targetNode:RoadNode):Array<RoadNode>\r\n    {\r\n        this._startNode = startNode;\r\n        this._currentNode = startNode;\r\n        this._targetNode = targetNode;\r\n        \r\n        if(!this._startNode || !this._targetNode)\r\n            return [];\r\n        \r\n        if(this._targetNode.value == 1)\r\n        {\r\n            console.log(\"目标不可达到：\");\r\n            return [];\r\n        }\r\n        \r\n        this._openlist = [];\r\n        this._closelist = [];\r\n        \r\n        var step:number = 0;\r\n        \r\n        while(true)\r\n        {\r\n            if(step > this.maxStep)\r\n            {\r\n                console.log(\"没找到目标计算步骤为：\",step);\r\n                return [];\r\n            }\r\n            \r\n            step++;\r\n            \r\n            this.searchRoundNodes(this._currentNode);\r\n            \r\n            if(this._openlist.length == 0)\r\n            {\r\n                console.log(\"没找到目标计算步骤为：\",step);\r\n                return [];\r\n            }\r\n            \r\n            this._openlist.sort(this.sortNode);\r\n            \r\n            this._currentNode = this._openlist.shift();\r\n            \r\n            if(this._currentNode == this._targetNode)\r\n            {\r\n                console.log(\"找到目标计算步骤为：\",step);\r\n                return this.getPath();\r\n            }else\r\n            {\r\n                this._closelist.push(this._currentNode);\r\n            }\r\n            \r\n        }\r\n        \r\n        return [];\r\n    }\r\n\r\n\r\n    /**\r\n     *寻路入口方法 如果没有寻到目标，则返回离目标最近的路径\r\n    * @param startNode\r\n    * @param targetNode\r\n    * @return \r\n    * \r\n    */\t\t\r\n    public seekPath2(startNode:RoadNode,targetNode:RoadNode):Array<RoadNode>\r\n    {\r\n        this._startNode = startNode;\r\n        this._currentNode = startNode;\r\n        this._targetNode = targetNode;\r\n        \r\n        if(!this._startNode || !this._targetNode)\r\n            return [];\r\n        \r\n        /*if(this._targetNode.value == 1)\r\n        {\r\n            console.log(\"目标不可达到：\");\r\n            return [];\r\n        }*/\r\n        \r\n        this._openlist = [];\r\n        this._closelist = [];\r\n        \r\n        var step:number = 0;\r\n        \r\n        var closestNode:RoadNode = null; //距离目标最近的路点\r\n\r\n        while(true)\r\n        {\r\n            if(step > this.maxStep)\r\n            {\r\n                console.log(\"没找到目标计算步骤为：\",step);\r\n                return this.seekPath(startNode,closestNode);\r\n            }\r\n            \r\n            step++;\r\n            \r\n            this.searchRoundNodes(this._currentNode);\r\n            \r\n            if(this._openlist.length == 0)\r\n            {\r\n                console.log(\"没找到目标计算步骤为：\",step);\r\n                return this.seekPath(startNode,closestNode);\r\n            }\r\n            \r\n            this._openlist.sort(this.sortNode);\r\n            \r\n            this._currentNode = this._openlist.shift();\r\n\r\n            if(closestNode == null)\r\n            {\r\n                closestNode = this._currentNode;\r\n            }else\r\n            {\r\n                if(this._currentNode.h < closestNode.h)\r\n                {\r\n                    closestNode = this._currentNode;\r\n                }\r\n            }\r\n            \r\n            if(this._currentNode == this._targetNode)\r\n            {\r\n                console.log(\"找到目标计算步骤为：\",step);\r\n                return this.getPath();\r\n            }else\r\n            {\r\n                this._closelist.push(this._currentNode);\r\n            }\r\n            \r\n        }\r\n        \r\n        return this.seekPath(startNode,closestNode);\r\n    }\r\n    \r\n    /**\r\n     * 对路节点进行排序\r\n     * @param node1 \r\n     * @param node2 \r\n     */\r\n    private sortNode(node1:RoadNode,node2:RoadNode)\r\n    {\r\n        if(node1.f < node2.f)\r\n        {\r\n            return -1;\r\n        }else if(node1.f > node2.f)\r\n        {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     *获得最终寻路到的所有路点 \r\n        * @return \r\n        * \r\n        */\t\t\r\n    private getPath():Array<RoadNode>\r\n    {\r\n        var nodeArr:Array<RoadNode> = [];\r\n        \r\n        var node:RoadNode = this._targetNode;\r\n        \r\n        while(node != this._startNode)\r\n        {\r\n            nodeArr.unshift(node);\r\n            node = node.parent;\r\n        }\r\n        \r\n        nodeArr.unshift(this._startNode);\r\n\r\n        if(!this.optimize)\r\n        {\r\n            return nodeArr;\r\n        }\r\n        \r\n        //第一阶段优化： 对横，竖，正斜进行优化\r\n        //把多个节点连在一起的，横向或者斜向的一连串点，除两边的点保留\r\n        for(var i:number = 1 ; i < nodeArr.length - 1 ; i++)\r\n        {\r\n            var preNode:RoadNode = nodeArr[i - 1] as RoadNode;\r\n            var midNode:RoadNode = nodeArr[i] as RoadNode;\r\n            var nextNode:RoadNode = nodeArr[i + 1] as RoadNode;\r\n        \r\n            var bool1:Boolean = midNode.cx == preNode.cx && midNode.cx == nextNode.cx;\r\n            var bool2:Boolean = midNode.cy == preNode.cy && midNode.cy == nextNode.cy;\r\n            var bool3:Boolean = ((midNode.cx - preNode.cx) / (midNode.cy - preNode.cy)) * ((nextNode.cx - midNode.cx) / (nextNode.cy - midNode.cy)) == 1\r\n        \r\n            if(bool1 || bool2 || bool3)\r\n            {\r\n                nodeArr.splice(i,1)\r\n                i--;\r\n            }\r\n        }\r\n        \r\n        //return nodeArr;\r\n\r\n        //第二阶段优化：对不在横，竖，正斜的格子进行优化\r\n        for(var i:number = 0 ; i < nodeArr.length - 2 ; i++)\r\n        {\r\n            var startNode:RoadNode = nodeArr[i] as RoadNode;\r\n            var optimizeNode:RoadNode = null;\r\n\r\n            //优先从尾部对比，如果能直达就把中间多余的路点删掉\r\n            for(var j:number = nodeArr.length - 1 ; j > i + 1 ; j--)\r\n            {\r\n                var targetNode:RoadNode = nodeArr[j] as RoadNode;\r\n\r\n                //在第一阶段优已经优化过横，竖，正斜了，所以再出现是肯定不能优化的，可以忽略\r\n                if(startNode.cx == targetNode.cx || startNode.cy == targetNode.cy || Math.abs(targetNode.cx - startNode.cx) == Math.abs(targetNode.cy - startNode.cy))\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                if(this.isArriveBetweenTwoNodes(startNode,targetNode))\r\n                {\r\n                    optimizeNode = targetNode;\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            if(optimizeNode)\r\n            {\r\n                var optimizeLen:number = j - i - 1;\r\n                nodeArr.splice(i + 1,optimizeLen);\r\n            }\r\n        \r\n        }\r\n\r\n        return nodeArr;\r\n    }\r\n    \r\n    /**\r\n     * 两点之间是否可到达\r\n     */\r\n    private isArriveBetweenTwoNodes(startNode:RoadNode,targetNode:RoadNode):boolean\r\n    {\r\n        if(startNode == targetNode)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        var disX:number = Math.abs(targetNode.cx - startNode.cx);\r\n        var disY:number = Math.abs(targetNode.cy - startNode.cy);\r\n\r\n        var dirX = 0;\r\n\r\n        if(targetNode.cx > startNode.cx)\r\n        {\r\n            dirX = 1;\r\n        }else if(targetNode.cx < startNode.cx)\r\n        {\r\n            dirX = -1;\r\n        }\r\n\r\n        var dirY = 0;\r\n\r\n        if(targetNode.cy > startNode.cy)\r\n        {\r\n            dirY = 1;\r\n        }else if(targetNode.cy < startNode.cy)\r\n        {\r\n            dirY = -1;\r\n        }\r\n\r\n        var rx:number = 0;\r\n        var ry:number = 0;\r\n        var intNum:number = 0;\r\n        var decimal:number = 0;\r\n\r\n        if(disX > disY)\r\n        {\r\n            var rate:number = disY / disX;\r\n\r\n            for(var i = 0 ; i < disX ; i++)\r\n            {\r\n                ry = startNode.cy + i * dirY * rate;\r\n                intNum = Math.floor(ry);\r\n                decimal = ry % 1;\r\n\r\n                var cx1:number = startNode.cx + i * dirX;\r\n                var cy1:number = decimal <= 0.5 ? intNum : intNum + 1;\r\n\r\n\r\n                ry = startNode.cy + (i + 1) * dirY * rate;\r\n                intNum = Math.floor(ry);\r\n                decimal = ry % 1;\r\n\r\n                var cx2:number = startNode.cx + (i + 1) * dirX;\r\n                var cy2:number = decimal <= 0.5 ? intNum : intNum + 1;\r\n\r\n                var node1:RoadNode = this._roadNodes[cx1 + \"_\" + cy1] as RoadNode;\r\n                var node2:RoadNode = this._roadNodes[cx2 + \"_\" + cy2] as RoadNode;\r\n\r\n                //cc.log(i + \"  :: \" + node1.cy,\" yy \",startNode.cy + i * rate,ry % 1);\r\n\r\n                if(!this.isCrossAtAdjacentNodes(node1,node2))\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n        }else\r\n        {\r\n            var rate:number = disX / disY;\r\n\r\n            for(var i = 0 ; i < disY ; i++)\r\n            {\r\n                rx = i * dirX * rate;\r\n                intNum = dirX > 0 ? Math.floor(startNode.cx + rx) : Math.ceil(startNode.cx + rx);\r\n                decimal = Math.abs(rx % 1);\r\n\r\n                var cx1:number = decimal <= 0.5 ? intNum : intNum + 1 * dirX;\r\n                var cy1:number = startNode.cy + i * dirY;\r\n                \r\n\r\n                rx = (i + 1) * dirX * rate;\r\n                intNum = dirX > 0 ? Math.floor(startNode.cx + rx) : Math.ceil(startNode.cx + rx);\r\n                decimal = Math.abs(rx % 1);\r\n\r\n                var cx2:number = decimal <= 0.5 ? intNum : intNum + 1 * dirX;\r\n                var cy2:number = startNode.cy + (i + 1) * dirY;\r\n\r\n                var node1:RoadNode = this._roadNodes[cx1 + \"_\" + cy1] as RoadNode;\r\n                var node2:RoadNode = this._roadNodes[cx2 + \"_\" + cy2] as RoadNode;\r\n\r\n                if(!this.isCrossAtAdjacentNodes(node1,node2))\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 判断两个相邻的点是否可通过\r\n     * @param node1 \r\n     * @param node2 \r\n     */\r\n    private isCrossAtAdjacentNodes(node1:RoadNode,node2:RoadNode):boolean\r\n    {\r\n        if(node1 == node2)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        //两个点只要有一个点不能通过就不能通过\r\n        if(!this.isPassNode(node1) || !this.isPassNode(node2))\r\n        {\r\n            return false;\r\n        }\r\n\r\n        var dirX = node2.cx - node1.cx;\r\n        var dirY = node2.cy - node1.cy\r\n\r\n        //如果不是相邻的两个点 则不能通过\r\n        if(Math.abs(dirX) > 1 || Math.abs(dirY) > 1)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        //如果相邻的点是在同一行，或者同一列，则判定为可通过\r\n        if((node1.cx == node2.cx) || (node1.cy == node2.cy))\r\n        {\r\n            return true;\r\n        }\r\n\r\n        //只剩对角情况了\r\n        if(\r\n            this.isPassNode(this._roadNodes[node1.cx + \"_\" + (node1.cy + dirY)]) &&\r\n            this.isPassNode(this._roadNodes[(node1.cx + dirX) + \"_\" + node1.cy])\r\n        )\r\n        {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 是否是可通过的点 \r\n     * @param node \r\n     */\r\n    private isPassNode(node:RoadNode):boolean\r\n    {\r\n        if(!node || node.value == 1)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     *测试寻路步骤 \r\n        * @param startNode\r\n        * @param targetNode\r\n        * @return \r\n        * \r\n        */\t\t\r\n    public testSeekPathStep(startNode:RoadNode,targetNode:RoadNode,callback:Function,target:any,time:number = 100):void\r\n    {\r\n        this._startNode = startNode;\r\n        this._currentNode = startNode;\r\n        this._targetNode = targetNode;\r\n        \r\n        if(this._targetNode.value == 1)\r\n            return;\r\n        \r\n        this._openlist = [];\r\n        this._closelist = [];\r\n        \r\n        var step:number = 0;\r\n        \r\n        clearInterval(this.handle);\r\n        this.handle = setInterval(()=>\r\n        {\r\n            if(step > this.maxStep)\r\n            {\r\n                console.log(\"没找到目标计算步骤为：\",step);\r\n                clearInterval(this.handle);\r\n                return;\r\n            }\r\n            \r\n            step++;\r\n            \r\n            this.searchRoundNodes(this._currentNode);\r\n            \r\n            if(this._openlist.length == 0)\r\n            {\r\n                console.log(\"没找到目标计算步骤为：\",step);\r\n                clearInterval(this.handle);\r\n                return;\r\n            }\r\n            \r\n            this._openlist.sort(this.sortNode);\r\n            \r\n            this._currentNode = this._openlist.shift();\r\n            \r\n            if(this._currentNode == this._targetNode)\r\n            {\r\n                console.log(\"找到目标计算步骤为：\",step);\r\n                clearInterval(this.handle);\r\n                callback.apply(target,[this._startNode,this._targetNode,this._currentNode,this._openlist,this._closelist,this.getPath()]);\r\n            }else\r\n            {\r\n                this._closelist.push(this._currentNode);\r\n                callback.apply(target,[this._startNode,this._targetNode,this._currentNode,this._openlist,this._closelist,null]);\r\n            }\r\n\r\n        },time);\r\n        \r\n    }\r\n    \r\n    /**\r\n     *查找一个节点周围可通过的点 \r\n        * @param node\r\n        * @return \r\n        * \r\n        */\t\t\r\n    private searchRoundNodes(node:RoadNode):void\r\n    {\r\n        for(var i:number = 0 ; i < this._round.length ; i++)\r\n        {\r\n            var cx:number = node.cx + this._round[i][0];\r\n            var cy:number = node.cy + this._round[i][1];\r\n            var node2:RoadNode = this._roadNodes[cx + \"_\" + cy] as RoadNode\r\n            \r\n            if(node2 != null && node2 != this._startNode && node2.value != 1 && !this.isInCloseList(node2) && !this.inInCorner(node2))\r\n            {\r\n                this.setNodeF(node2);\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     *设置节点的F值 \r\n        * @param node\r\n        * \r\n        */\t\t\r\n    public setNodeF(node:RoadNode):void\r\n    {\t\r\n        var g:number;\r\n        \r\n        if(node.cx == this._currentNode.cx || node.cy == this._currentNode.cy)\r\n        {\r\n            g = this._currentNode.g + this.COST_STRAIGHT;\r\n        }else\r\n        {\r\n            g = this._currentNode.g + this.COST_DIAGONAL;\r\n        }\r\n        \r\n        if(this.isInOpenList(node))\r\n        {\r\n            if(g < node.g)\r\n            {\r\n                node.g = g;\r\n                \r\n            }else\r\n            {\r\n                return;\r\n            }\r\n        }else\r\n        {\r\n            node.g = g;\r\n            this._openlist.push(node);\r\n        }\r\n        \r\n        node.parent = this._currentNode;\r\n        node.h = (Math.abs(this._targetNode.cx - node.cx) + Math.abs(this._targetNode.cy - node.cy)) * this.COST_STRAIGHT;\r\n        node.f = node.g + node.h;\r\n    }\r\n    \r\n    /**\r\n     *节点是否在开启列表 \r\n        * @param node\r\n        * @return \r\n        * \r\n        */\t\t\r\n    private  isInOpenList(node:RoadNode):Boolean\r\n    {\r\n        return this._openlist.indexOf(node) != -1 ? true : false;\r\n    }\r\n    \r\n    /**\r\n     *节点是否在关闭列表 \r\n        * \r\n        */\t\t\r\n    private  isInCloseList(node:RoadNode):Boolean\r\n    {\r\n        return this._closelist.indexOf(node) != -1 ? true : false;\r\n    }\r\n    \r\n    /**\r\n     *节点是否在拐角处 \r\n        * @return \r\n        * \r\n        */\t\t\r\n    private  inInCorner(node:RoadNode):Boolean\r\n    {\r\n        if(node.cx == this._currentNode.cx || node.cy == this._currentNode.cy)\r\n        {\r\n            return false;\r\n        }\r\n        \r\n        var node1:RoadNode = this._roadNodes[this._currentNode.cx + \"_\" + node.cy] as RoadNode;\r\n        var node2:RoadNode = this._roadNodes[node.cx + \"_\" + this._currentNode.cy] as RoadNode;\r\n        \r\n        if(this.isPassNode(node1) && this.isPassNode(node2))\r\n        {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    public  dispose():void\r\n    {\r\n        this._roadNodes = null;\r\n        this._round = null;\r\n    }\r\n}\r\n","import Point from \"./Point\";\r\nimport RoadNode from \"./RoadNode\";\r\nimport { MapType } from \"../base/MapType\";\r\n\r\n/**\r\n * 地图路点的换算 \r\n * @author 落日故人 QQ 583051842\r\n * \r\n */\r\nexport default class MapRoadUtils  {\r\n\r\n    private static _instance:MapRoadUtils;\r\n\r\n    public static get instance():MapRoadUtils\r\n    {\r\n        if(this._instance == null)\r\n        {\r\n            this._instance = new MapRoadUtils();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    /**\r\n     * 地图宽度\r\n     */\t\t\r\n    private _mapWidth:number; \r\n    \r\n    /**\r\n     *地图高度 \r\n     */\t\t\r\n    private _mapHeight:number;\r\n    \r\n    /**\r\n     *地图一共分成几行 \r\n     */\t\t\r\n    private _row:number;\r\n    \r\n    /**\r\n     *地图一共分成几列 \r\n     */\t\t\r\n    private _col:number;\r\n    \r\n    /**\r\n     *地图路点单元格宽 \r\n     */\t\t\r\n    private _nodeWidth:number;\r\n    \r\n    /**\r\n     *地图路点单元格高 \r\n     */\t\t\r\n    private _nodeHeight:number;\r\n    \r\n    /**\r\n     *地图路点单元宽的一半 \r\n     */\t\r\n    private _halfNodeWidth:number;\r\n    \r\n    /**\r\n     *地图路点单元高的一半 \r\n     */\t\r\n    private _halfNodeHeight:number;\r\n    \r\n    private _mapType:number;\r\n    \r\n    public _mapRoad:IMapRoad;\r\n\r\n    public updateMapInfo(mapWidth:number, mapHeight:number, nodeWidth:number, nodeHeight:number,mapType:MapType):void\r\n    {\r\n        this._mapWidth = mapWidth;\r\n        this._mapHeight = mapHeight;\r\n        this._nodeWidth = nodeWidth;\r\n        this._nodeHeight = nodeHeight;\r\n        \r\n        this._halfNodeWidth = Math.floor(this._nodeWidth / 2);\r\n        this._halfNodeHeight = Math.floor(this._nodeHeight / 2);\r\n        \r\n        this._col = Math.ceil(mapWidth / this._nodeWidth);\r\n        this._row = Math.ceil(mapHeight / this._nodeHeight);\r\n        \r\n        this._mapType = mapType;\r\n        \r\n        switch(this._mapType)\r\n        {\r\n            case MapType.angle45:this._mapRoad = new MapRoad45Angle(this._row,this._col,this._nodeWidth,this._nodeHeight,this._halfNodeWidth,this._halfNodeHeight);break;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     *根据地图平面像素坐标获得路节点  \r\n        * @param x \r\n        * @param y\r\n        * @return \r\n        * \r\n        */\t\t\r\n    public getNodeByPixel(x:number,y:number):RoadNode\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getNodeByPixel(x,y);\r\n        }\r\n        return new RoadNode();\r\n    }\r\n    \r\n    /**\r\n     *根据路点平面坐标点获得路节点  \r\n        * @param px\r\n        * @param py\r\n        * @return \r\n        * \r\n        */\t\t\t\r\n    public getNodeByDerect(dx:number,dy:number):RoadNode\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getNodeByDerect(dx,dy);\r\n        }\r\n        return new RoadNode();\r\n    }\r\n    \r\n    /**\r\n     *根据路点场景世界坐标获得路节点 \r\n        * @param wx\r\n        * @param wy\r\n        * @return \r\n        * \r\n        */\t\t\t\r\n    public getNodeByWorldPoint(wx:number,wy:number):RoadNode\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getNodeByWorldPoint(wx,wy);\r\n        }\r\n        return new RoadNode();\r\n    }\r\n    \r\n    /**\r\n     *根据像素坐标得到场景世界坐标 \r\n        * @param x\r\n        * @param y\r\n        * @return \r\n        * \r\n        */\t\t\r\n    public getWorldPointByPixel(x:number,y:number):Point\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getWorldPointByPixel(x,y);\r\n        }\r\n        return new Point();\r\n    }\r\n    \r\n    /**\r\n     *根据世界坐标获得像素坐标 \r\n        * @param cx\r\n        * @param cy\r\n        * @return \r\n        * \r\n        */\t\t\r\n    public getPixelByWorldPoint(cx:number,cy:number):Point\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getPixelByWorldPoint(cx,cy);\r\n        }\r\n        return new Point();\r\n    }\r\n    \r\n    /**\r\n     *根据像素坐标获得网格平面坐标\r\n        * @param x\r\n        * @param y\r\n        * @return \r\n        * \r\n        */\t\t\r\n    public getDerectByPixel(x:number,y:number):Point\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getDerectByPixel(x,y);\r\n        }\r\n        return new Point();\r\n        \r\n    }\r\n    \r\n    /**\r\n     *根据世界坐标获得网格平面坐标 \r\n        * @param cx\r\n        * @param cy\r\n        * @return \r\n        * \r\n        */\t\t\r\n    public getDerectByWorldPoint(cx:number,cy:number):Point\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getDerectByWorldPoint(cx,cy);\r\n        }\r\n        return new Point();\r\n    }\r\n    \r\n    /**\r\n     *根据网格平面坐标获得世界坐标 \r\n        * @param dx\r\n        * @param dy\r\n        * @return \r\n        * \r\n        */\t\t\r\n/*\tpublic getWorldPointByDerect(dx:number,dy:number):Point\r\n    {\r\n        var cx:number = (dy + dx) / 2;\r\n        var cy:number = (dy - dx) / 2 + col - 1;\r\n        return new Point(cx,cy);\r\n    }*/\r\n    \r\n    public getPixelByDerect(dx:number,dy:number):Point\r\n    {\r\n        if(this._mapRoad)\r\n        {\r\n            return this._mapRoad.getPixelByDerect(dx,dy);\r\n        }\r\n        return new Point();\r\n    }\r\n    \r\n    public get mapWidth():number\r\n    {\r\n        return this._mapWidth;\r\n    }\r\n    \r\n    public get mapHeight():number\r\n    {\r\n        return this._mapHeight;\r\n    }\r\n    \r\n    public get nodeWidth():number\r\n    {\r\n        return this._nodeWidth;\r\n    }\r\n    \r\n    public get nodeHeight():number\r\n    {\r\n        return this._nodeHeight;\r\n    }\r\n    \r\n    public get row():number\r\n    {\r\n        return this._row;\r\n    }\r\n    \r\n    public get col():number\r\n    {\r\n        return this._col;\r\n    }\r\n\r\n    public get halfNodeWidth():number\r\n    {\r\n        return this._halfNodeWidth;\r\n    }\r\n\r\n    public get halfNodeHeight():number\r\n    {\r\n        return this._halfNodeHeight;\r\n    }\r\n\r\n    /**\r\n     *地图类型 0:斜45度等视角地图, 1:90度角平面地图 \r\n        */\r\n    public get mapType():number\r\n    {\r\n        return this._mapType;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n *地图路点处理接口 \r\n * @author Administrator\r\n * \r\n */\r\ninterface IMapRoad\r\n{\r\n\t/**\r\n\t *根据地图平面像素坐标获得路节点  \r\n\t * @param x \r\n\t * @param y\r\n\t * @return \r\n\t * \r\n\t */\r\n\tgetNodeByPixel(x:number,y:number):RoadNode;\r\n\t\r\n\t/**\r\n\t *根据路点平面坐标点获得路节点  \r\n\t * @param px\r\n\t * @param py\r\n\t * @return \r\n\t * \r\n\t */\t\t\t\r\n\tgetNodeByDerect(dx:number,dy:number):RoadNode;\r\n\t\r\n\t/**\r\n\t *根据路点场景世界坐标获得路节点 \r\n\t * @param wx\r\n\t * @param wy\r\n\t * @return \r\n\t * \r\n\t */\t\t\t\r\n\tgetNodeByWorldPoint(wx:number,wy:number):RoadNode;\r\n\t\r\n\t\r\n\t/**\r\n\t *根据像素坐标得到场景世界坐标 \r\n\t * @param x\r\n\t * @param y\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tgetWorldPointByPixel(x:number,y:number):Point;\r\n\t\r\n\t\r\n\t/**\r\n\t *根据世界坐标获得像素坐标 \r\n\t * @param cx\r\n\t * @param cy\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tgetPixelByWorldPoint(cx:number,cy:number):Point;\r\n\t\r\n\t\r\n\t/**\r\n\t *根据像素坐标获得网格平面坐标\r\n\t * @param x\r\n\t * @param y\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tgetDerectByPixel(x:number,y:number):Point;\r\n\t\r\n\t\r\n\t/**\r\n\t *根据世界坐标获得网格平面坐标 \r\n\t * @param cx\r\n\t * @param cy\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tgetDerectByWorldPoint(cx:number,cy:number):Point;\r\n\t\r\n\t\r\n\t/**\r\n\t *根据网格平面坐标获得像素坐标 \r\n\t * @param dx\r\n\t * @param dy\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tgetPixelByDerect(dx:number,dy:number):Point;\r\n}\r\n\r\n/**\r\n *45度等视角地图路点处理接口实现 \r\n * @author Administrator\r\n * \r\n */\r\nclass MapRoad45Angle implements IMapRoad\r\n{\r\n\t\r\n\t/**\r\n\t *地图一共分成几行 \r\n\t */\t\t\r\n\tprivate _row:number;\r\n\t\r\n\t/**\r\n\t *地图一共分成几列 \r\n\t */\t\t\r\n\tprivate _col:number;\r\n\t\r\n\t/**\r\n\t *地图路点单元格宽 \r\n\t */\t\t\r\n\tprivate _nodeWidth:number;\r\n\t\r\n\t/**\r\n\t *地图路点单元格高 \r\n\t */\t\t\r\n\tprivate _nodeHeight:number;\r\n\t\r\n\t/**\r\n\t *地图路点单元宽的一半 \r\n\t */\t\r\n\tprivate _halfNodeWidth:number;\r\n\t\r\n\t/**\r\n\t *地图路点单元高的一半 \r\n\t */\t\r\n\tprivate _halfNodeHeight:number;\r\n\t\r\n\tpublic constructor(row:number,col:number,nodeWidth:number,nodeHeight:number,halfNodeWidth:number,halfNodeHeight:number)\r\n\t{\r\n\t\tthis._row = row;\r\n\t\tthis._col = col;\r\n\t\tthis._nodeWidth = nodeWidth;\r\n\t\tthis._nodeHeight = nodeHeight;\r\n\t\tthis._halfNodeWidth = halfNodeWidth;\r\n\t\tthis._halfNodeHeight = halfNodeHeight;\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据地图平面像素坐标获得路节点  \r\n\t * @param x \r\n\t * @param y\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tpublic getNodeByPixel(x:number,y:number):RoadNode\r\n\t{\r\n\t\tvar wPoint:Point = this.getWorldPointByPixel(x,y);\r\n\t\tvar fPoint:Point = this.getPixelByWorldPoint(wPoint.x,wPoint.y);\r\n\t\tvar dPoint:Point = this.getDerectByPixel(x,y);\r\n\t\t\r\n\t\tvar node:RoadNode = new RoadNode();\r\n\t\t\r\n\t\tnode.cx = wPoint.x;\r\n\t\tnode.cy = wPoint.y;\r\n\t\t\r\n\t\tnode.px = fPoint.x;\r\n\t\tnode.py = fPoint.y;\r\n\t\t\r\n\t\tnode.dx = dPoint.x;\r\n\t\tnode.dy = dPoint.y;\r\n\t\t\r\n\t\treturn node;\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据路点平面坐标点获得路节点  \r\n\t * @param px\r\n\t * @param py\r\n\t * @return \r\n\t * \r\n\t */\t\t\t\r\n\tpublic getNodeByDerect(dx:number,dy:number):RoadNode\r\n\t{\r\n\t\t\r\n\t\tvar fPoint:Point = this.getPixelByDerect(dx,dy);\r\n\t\tvar wPoint:Point = this.getWorldPointByPixel(fPoint.x,fPoint.y);\r\n\t\t\r\n\t\tvar node:RoadNode = new RoadNode();\r\n\t\t\r\n\t\tnode.cx = wPoint.x;\r\n\t\tnode.cy = wPoint.y;\r\n\t\t\r\n\t\tnode.px = fPoint.x;\r\n\t\tnode.py = fPoint.y;\r\n\t\t\r\n\t\tnode.dx = dx;\r\n\t\tnode.dy = dy;\r\n\t\t\r\n\t\treturn node;\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据路点场景世界坐标获得路节点 \r\n\t * @param wx\r\n\t * @param wy\r\n\t * @return \r\n\t * \r\n\t */\t\t\t\r\n\tpublic getNodeByWorldPoint(wx:number,wy:number):RoadNode\r\n\t{\r\n\t\tvar point:Point = this.getPixelByWorldPoint(wx,wy)\r\n\t\treturn this.getNodeByPixel(point.x,point.y);\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据像素坐标得到场景世界坐标 \r\n\t * @param x\r\n\t * @param y\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tpublic getWorldPointByPixel(x:number,y:number):Point\r\n\t{\r\n\t\tvar cx:number = Math.ceil(x/this._nodeWidth - 0.5 + y/this._nodeHeight) - 1;\r\n\t\tvar cy:number = (this._col - 1) - Math.ceil(x/this._nodeWidth - 0.5 - y/this._nodeHeight);\r\n\t\t\r\n\t\treturn new Point(cx,cy);\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据世界坐标获得像素坐标 \r\n\t * @param cx\r\n\t * @param cy\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tpublic getPixelByWorldPoint(cx:number,cy:number):Point\r\n\t{\r\n\t\tvar x:number = Math.floor((cx + 1 - (cy  - (this._col - 1))) * this._halfNodeWidth);\r\n\t\tvar y:number = Math.floor((cx + 1 + (cy  - (this._col - 1))) * this._halfNodeHeight);\r\n\t\treturn new Point(x,y);\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据像素坐标获得网格平面坐标\r\n\t * @param x\r\n\t * @param y\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tpublic getDerectByPixel(x:number,y:number):Point\r\n\t{\r\n\t\tvar worldPoint:Point = this.getWorldPointByPixel(x,y);\r\n\t\tvar pixelPoint:Point = this.getPixelByWorldPoint(worldPoint.x,worldPoint.y);\r\n\t\tvar dx:number = Math.floor( pixelPoint.x / this._nodeWidth ) - ( pixelPoint.x  % this._nodeWidth == 0 ? 1 : 0 );\r\n\t\tvar dy:number =  Math.floor( pixelPoint.y / this._halfNodeHeight ) - 1;\r\n\t\treturn new Point(dx,dy);\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据世界坐标获得网格平面坐标 \r\n\t * @param cx\r\n\t * @param cy\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tpublic getDerectByWorldPoint(cx:number,cy:number):Point\r\n\t{\r\n\t\tvar dx:number = Math.floor((cx - (cy - (this._col -1)))/2);\r\n\t\tvar dy:number = cx  + (cy  - (this._col - 1));\r\n\t\treturn new Point(dx,dy);\r\n\t}\r\n\t\r\n\t/**\r\n\t *根据网格平面坐标获得像素坐标 \r\n\t * @param dx\r\n\t * @param dy\r\n\t * @return \r\n\t * \r\n\t */\t\t\r\n\tpublic getPixelByDerect(dx:number,dy:number):Point\r\n\t{\r\n\t\tvar x:number = Math.floor((dx + dy % 2) * this._nodeWidth + (1 - dy % 2) * this._halfNodeWidth);\r\n\t\tvar y:number = Math.floor((dy + 1) * this._halfNodeHeight);\r\n\t\treturn new Point(x,y);\r\n\t}\r\n}","export default class Point {\r\n\r\n    public x:number = 0;\r\n    public y:number = 0;\r\n\r\n    public constructor(x:number = 0 , y:number = 0)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","\r\n/**\r\n * 地图路节点 \r\n * @author 落日故人 QQ 583051842\r\n * \r\n */\r\nexport default class RoadNode {\r\n\r\n    private _px:number;//像素坐标x轴\r\n    private _py:number;//像素坐标y轴\r\n    private _cx:number;//世界坐标x轴\r\n    private _cy:number;//世界坐标y轴\r\n    private _dx:number;//直角坐标x轴\r\n    private _dy:number;//直角坐标y轴\r\n    private _value:number = 0;//节点的值\r\n    private _f:number = 0; //路点的f值\r\n    private _g:number = 0; //路点的g值\t\r\n    private _h:number = 0; //路点的h值\r\n    private _parent:RoadNode = null; //路点的父节点\r\n    \r\n    public constructor()\r\n    {\r\n    }\r\n    \r\n    public toString():String\r\n    {\r\n        return \"路点像素坐标：（\" + this._px + \",\" + this._py +\"),  \" +\r\n            \"路点世界坐标：（\" + this._cx + \",\" + this._cy +\"),  \" + \r\n            \"路点平面直角坐标：（\" + this._dx + \",\" + this._dy +\")\";\r\n    }\r\n    \r\n    public get px():number\r\n    {\r\n        return this._px;\r\n    }\r\n\r\n    public set px(value:number)\r\n    {\r\n        this._px = value;\r\n    }\r\n\r\n    public get py():number\r\n    {\r\n        return this._py;\r\n    }\r\n\r\n    public set py(value:number)\r\n    {\r\n        this._py = value;\r\n    }\r\n\r\n    public get cx():number\r\n    {\r\n        return this._cx;\r\n    }\r\n\r\n    public set cx(value:number)\r\n    {\r\n        this._cx = value;\r\n    }\r\n\r\n    public get cy():number\r\n    {\r\n        return this._cy;\r\n    }\r\n\r\n    public set cy(value:number)\r\n    {\r\n        this._cy = value;\r\n    }\r\n\r\n    public get dx():number\r\n    {\r\n        return this._dx;\r\n    }\r\n\r\n    public set dx(value:number)\r\n    {\r\n        this._dx = value;\r\n    }\r\n\r\n    public get dy():number\r\n    {\r\n        return this._dy;\r\n    }\r\n\r\n    public set dy(value:number)\r\n    {\r\n        this._dy = value;\r\n    }\r\n\r\n    public get value():number\r\n    {\r\n        return this._value;\r\n    }\r\n\r\n    public set value(val:number)\r\n    {\r\n        this._value = val;\r\n    }\r\n\r\n    public get f():number\r\n    {\r\n        return this._f;\r\n    }\r\n\r\n    public set f(value:number)\r\n    {\r\n        this._f = value;\r\n    }\r\n\r\n    public get g():number\r\n    {\r\n        return this._g;\r\n    }\r\n\r\n    public set g(value:number)\r\n    {\r\n        this._g = value;\r\n    }\r\n\r\n    public get h():number\r\n    {\r\n        return this._h;\r\n    }\r\n\r\n    public set h(value:number)\r\n    {\r\n        this._h = value;\r\n    }\r\n\r\n    public get parent():RoadNode\r\n    {\r\n        return this._parent;\r\n    }\r\n\r\n    public set parent(value:RoadNode)\r\n    {\r\n        this._parent = value;\r\n    }\r\n}\r\n"],"sourceRoot":""}